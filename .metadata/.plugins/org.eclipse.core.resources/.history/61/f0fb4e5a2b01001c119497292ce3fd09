package com.app;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import org.apache.log4j.Logger;

import com.app.customer.service.CustomerCreateService;
import com.app.customer.service.CustomerLoginService;
import com.app.customer.service.CustomerSearchServices;
import com.app.customer.service.impl.CustomerCreateServiceImpl;
import com.app.customer.service.impl.CustomerLoginServiceImpl;
import com.app.customer.service.impl.CustomerSearchServicesImpl;
import com.app.dao.CustomerAddToCardDAO;
import com.app.dao.impl.CustomerAddToCartDAOImpl;
import com.app.employee.service.EmployeeAddNewProductService;
import com.app.employee.service.EmployeeLoginService;
import com.app.employee.service.impl.EmployeeAddNewProductServiceImpl;
import com.app.employee.service.impl.EmployeeLoginServiceImpl;
import com.app.exception.BusinessException;
import com.app.model.Cart;
import com.app.model.Customer;
import com.app.model.Employee;
import com.app.model.Product;
import com.app.util.MysqlDbConnection;
import com.app.validation.Validation;
import com.app.validationimpl.ValidationImpl;
import com.mysql.cj.protocol.Resultset;

public class Main {
	private static Logger log = Logger.getLogger(Main.class);

	public static void main(String[] args) {

		Scanner scanner = new Scanner(System.in);
		log.info("Welcome Alpha Shopping...");
		log.info("===========================");
		int choiceOfMain = 0;
		do {
			log.info("1.) Customer Login");
			log.info("2.) Employee Login");
			log.info("3.) New Customer Signup ");
			log.info("4.) Exit");
			log.info("\nEnter Your Choice Of Main");
			try {
				choiceOfMain = Integer.parseInt(scanner.nextLine());
			}catch(NumberFormatException ex) {log.info("Only Integer values are allowed");}

			switch (choiceOfMain) {
			case 1:
				log.info("Enter Your Username :");
				String email = scanner.nextLine();
				log.info("Enter Your Password :");
				String password = scanner.nextLine();

				try {
					Customer customer = null;
					CustomerLoginService customerLogin = new CustomerLoginServiceImpl();
					customer = customerLogin.isUserExist(email, password);
					if (customer != null) {
						int choiceOfLoggedInCustomer;
						do {

							log.info("Hello " + customer.getFirstName().toUpperCase() + " Happy Shopping...");
							log.info("1.) Search Product");
							log.info("2.) View Cart");
							log.info("3.) view order");
							log.info("4.) LogOut");
							log.info("\nEnter Your Choice of logged In Customer");
							choiceOfLoggedInCustomer = Integer.parseInt(scanner.nextLine());
							switch (choiceOfLoggedInCustomer) {
							case 1:
								int ChoiceOfSearchProduct;
								do {
									log.info("How would you like to Search");
									log.info("1.) Search By Product Name");
									log.info("2.) Search By Product Branch/Company");
									log.info("3.) Search By Product Category");
									log.info("4.) Bach To Home Menu");
									log.info("\nEnter Your Choice Of Search Product");
									ChoiceOfSearchProduct = Integer.parseInt(scanner.nextLine());
									CustomerSearchServices customerSearchServices = new CustomerSearchServicesImpl();
									switch (ChoiceOfSearchProduct) {
									case 1:

										log.info("Enter Name of the Product");
										String productName = scanner.nextLine();
										List<Product> productList = new ArrayList<>();
										productList = customerSearchServices.productSearchByName(productName);
										for (Product p : productList) {
											log.info(p);
										}
										log.info("***************************");
										int addToCartChoice;
										do {
											log.info("Add to cart ? ");
											log.info("1.)Yes");
											log.info("2.)No");
											addToCartChoice = Integer.parseInt(scanner.nextLine());
											switch (addToCartChoice) {
											case 1:
												try {
													log.info("Enter Product id");
													int productId = Integer.parseInt(scanner.nextLine());
													log.info("Enter Quantity");
													int quantity = Integer.parseInt(scanner.nextLine());
													CustomerAddToCardDAO addToCart=new CustomerAddToCartDAOImpl();
													addToCart.addToCart(productId, customer.getEmail(), quantity);
												} catch (NumberFormatException e) {
													log.info(e.getMessage());
												}

												break;
											case 2:

												break;

											default:log.info("Enter Valid choice ");
												break;
											}
										} while (addToCartChoice != 2);
										break;
									case 2:

										log.info("Enter Name of the Product Company");
										String productCompany = scanner.nextLine();
										List<Product> productList1 = new ArrayList<>();
										productList1 = customerSearchServices.productSearchByCompany(productCompany);
										for (Product p : productList1) {
											log.info(p);
										}

										break;
									case 3:

										log.info("Enter Name of the Category");
										String productCategory = scanner.nextLine();
										List<Product> productList2 = new ArrayList<>();
										productList2 = customerSearchServices.productSearchByCategory(productCategory);
										for (Product p : productList2) {
											log.info(p);
										}

										break;
									case 4:

										break;

									default:
										log.info("Provide Valid Input . Accepts only 1-4");
										break;
									}

								} while (ChoiceOfSearchProduct != 4);

								break;
							case 2:
								log.info("Under construction");

								break;
							case 3:
								log.info("Under construction");

								break;
							case 4:
								log.info("ThankYou For Shopping " + customer.getFirstName() + " Visit Again..:)");
							default:
								break;
							}
						} while (choiceOfLoggedInCustomer != 4); // logout and goto main main menu

					}
				} catch (BusinessException e) {
					log.info(e.getMessage());
				}

				break;
			case 2:
				log.info("    Employee Login   ");
				log.info("======================");
				log.info("Enter Your Email");
				String employeeEmail = scanner.nextLine();
				log.info("Enter Access Key");
				String employeePassword = scanner.nextLine();

				try {
					Employee employee = null;
					EmployeeLoginService employeeLoginService = new EmployeeLoginServiceImpl();
					employee = employeeLoginService.isEmployeeExist(employeeEmail, employeePassword);
					if (employee != null) {
						int employeeOperationChoice;
						do {
							log.info("Hii " + employee.getEmployeeName() + " ");
							log.info("What operation you have to perform");
							log.info("1.) Add New Product");
							log.info("2.) Update the Status of Order");
							log.info("3.) Search Customer");
							log.info("4.) Logout");
							log.info("\nEnter Your Choice Of To perform Operation");
							employeeOperationChoice = Integer.parseInt(scanner.nextLine());
							switch (employeeOperationChoice) {
							case 1:
								log.info("  Add New Product");
								log.info("====================");
								Product product = new Product();
								log.info("Enter product Id");

								try {
									product.setProductId(Integer.parseInt(scanner.nextLine()));
								} catch (NumberFormatException e) {
									System.out.println(e.getMessage());
								}
								log.info("Enter product Name");
								product.setProductName(scanner.nextLine());
								log.info("Enter product Compony");
								product.setProductCompany(scanner.nextLine());
								log.info("Enter product Category");
								product.setProducCategory(scanner.nextLine());
								log.info("Enter product Price");

								try {
									product.setProductPrice(Double.parseDouble(scanner.nextLine()));
								} catch (NumberFormatException e) {
									System.out.println(e.getMessage());
								}
								EmployeeAddNewProductService newProduct = new EmployeeAddNewProductServiceImpl();
								int c1 = newProduct.addNewProduct(product);
								if (c1 == 1) {
									log.info("Product Added Succeessfully.");
								}
								break;
							case 2:
								log.info("Update the Status of Order");

								break;
							case 3:
								log.info("Search Customer");
								int employeesSearchOperationChoice;
								do {
									log.info("How would you like to search");
									log.info("1.) Search By Customer Name");
									log.info("2.) Search By Customer Email");
									log.info("3.) Search By Customer OrderId");
									log.info("4.) Go to Back Menu");
									log.info("\nEnter Your Choice Of To perform Operation");
									employeesSearchOperationChoice = Integer.parseInt(scanner.nextLine());
									switch (employeesSearchOperationChoice) {
									case 1:
										log.info("Search By Customer Name");

										break;
									case 2:
										log.info("Search By Customer Email");

										break;
									case 3:
										log.info("Search By Customer OrderId");

										break;
									case 4:

										break;

									default:
										log.info("Invalid Choice Enter Between 1-4");
										break;
									}
								} while (employeesSearchOperationChoice != 4);

								break;
							case 4:
								log.info("ThankYou :)");

								break;

							default:
								log.info("Invalid choice Enter Choice between 1-4");
								break;
							}

						} while (employeeOperationChoice != 4);
					}

				} catch (BusinessException e1) {
					log.info(e1.getMessage());
				}

				break;
			case 3:
				log.info("        Sign Up        ");
				log.info("========================");
				Customer newCustomer = new Customer();
				log.info("Enter your Email");
				newCustomer.setEmail(scanner.nextLine());
				log.info("Enter your First Name");
				newCustomer.setFirstName(scanner.nextLine());
				log.info("Enter your Last Name ");
				newCustomer.setLastName(scanner.nextLine());
				log.info("Enter your City");
				newCustomer.setCity(scanner.nextLine());
				log.info("Enter Password of Your Choice");
				newCustomer.setPassword(scanner.nextLine());
				CustomerCreateService createCustomer = new CustomerCreateServiceImpl();
				try {
					int c = createCustomer.createNewCustomer(newCustomer);
					if (c == 1) {
						log.info("Hello " + newCustomer.getFirstName() + " your account has successfully created :)");
					}
				} catch (BusinessException e) {
					log.info(e.getMessage());
				}

				break;
			case 4:

				break;

			default:
				log.info("Invalid Choice . Try Again :)");
				break;
			}

		} while (choiceOfMain != 4); // Go out of AplhaShopping App

	}

}
